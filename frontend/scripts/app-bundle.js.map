{"version":3,"sources":["app.js","environment.js","main.js","resources/index.js"],"names":["App","http","message","activate","fetch","then","data","json","message2","catch","err","toString","debug","testing","configure","Promise","config","longStackTraces","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot"],"mappings":";;;;;;;;;;;;;;MAEaA,cAAAA;AACX,mBAAc;AAAA;;AACZ,WAAKC,IAAL,GAAY,oCAAZ;;AAEA,WAAKC,OAAL,GAAe,sCAAf;AACD;;kBAEDC,+BAAW;AAAA;;AACT,WAAKF,IAAL,CAAUG,KAAV,CAAgB,uBAAhB,EAAyCC,IAAzC,CAA8C;AAAA,eAAQC,KAAKC,IAAL,EAAR;AAAA,OAA9C,EACCF,IADD,CACM,gBAAQ;AACZ,cAAKG,QAAL,GAAgBD,KAAKL,OAArB;AACD,OAHD,EAICO,KAJD,CAIO,eAAO;AACZ,cAAKD,QAAL,GAAgBE,IAAIC,QAAJ,EAAhB;AACD,OAND;AAOD;;;;;;;;;;;oBCjBY;AACbC,WAAO,IADM;AAEbC,aAAS;AAFI;;;;;;;;UCUCC,YAAAA;;;;;;;;;;AAPhBC,UAAQC,MAAR,CAAe;AACbC,qBAAiB,sBAAYL,KADhB;AAEbM,cAAU;AACRC,wBAAkB;AADV;AAFG,GAAf;;AAOO,WAASL,SAAT,CAAmBM,OAAnB,EAA4B;AACjCA,YAAQC,GAAR,CACGC,qBADH,GAEGC,OAFH,CAEW,WAFX;;AAIA,QAAI,sBAAYX,KAAhB,EAAuB;AACrBQ,cAAQC,GAAR,CAAYG,kBAAZ;AACD;;AAED,QAAI,sBAAYX,OAAhB,EAAyB;AACvBO,cAAQC,GAAR,CAAYI,MAAZ,CAAmB,iBAAnB;AACD;;AAEDL,YAAQM,KAAR,GAAgBrB,IAAhB,CAAqB;AAAA,aAAMe,QAAQO,OAAR,EAAN;AAAA,KAArB;AACD;;;;;;;;UCxBeb,YAAAA;AAAT,WAASA,SAAT,CAAmBE,MAAnB,EAA2B,CAEjC","file":"app-bundle.js","sourcesContent":["import {HttpClient} from 'aurelia-fetch-client';\n\nexport class App {\n  constructor() {\n    this.http = new HttpClient();\n\n    this.message = 'Hello World! (From Aurelia Frontend)';\n  }\n\n  activate() {\n    this.http.fetch('http://localhost:8080').then(data => data.json())\n    .then(json => {\n      this.message2 = json.message;\n    })\n    .catch(err => {\n      this.message2 = err.toString();\n    })\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  longStackTraces: environment.debug,\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}